# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 1 # number of classes
names: ['person']
ch: 6
path: /kaggle/input/kaist2yolo/kaist-yolo/
train_lr: lwir
val_lr: lwir
#path: C:/Users/Administrator/Desktop/Paper Code/ultralytics-main/Dataset/kaist-yolo # dataset root directory
train: train/visible # training images (relative to 'path')
val: val/visible # validation images (relative to 'path')
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs

# YOLOv8.0n backbone
backbone:
  - [-1, 1, MobileViTBackbone, [192, 1, 3, 3]] # 0 - 96, 80, 80 因为增加了3通道，所以原本96也是翻倍了
  - [-1, 1, MobileViTBackbone, [256, 2, 3, 3]] # 1 - 128, 40, 40
  - [-1, 1, MobileViTBackbone, [1280, 3, 3, 3]] # 2 - 160, 20, 20
  - [-1, 1, SPPF, [1280, 5]]         # 3 因为6通道数据未进行合并，所以直接翻倍
  - [-1, 2, C2PSA, [1280]]           # 4 20 * 20

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 40*40
  - [-1, 1, Conv, [192, 1, 1]]                 # 调整通道数为 128
  - [[-1, 1], 1, Concat, [1]]                  # 拼接 P4
  - [-1, 2, C3k2, [512, False]]                # 7

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 80*80
  - [-1, 1, Conv, [192, 1, 1]]                  # 调整通道数为 96
  - [[-1, 0], 1, Concat, [1]]                  # 拼接 P3
  - [-1, 2, C3k2, [256, False]]                # 10

  - [-1, 1, Conv, [256, 3, 2]]                 # 下采样到 40*40
  - [-1, 1, Conv, [512, 1, 1]]                 # 调整通道数为 512
  - [[-1, 8], 1, Concat, [1]]                  # 拼接 P4
  - [-1, 2, C3k2, [512, False]]                # 13

  - [-1, 1, Conv, [512, 3, 2]]                 # 下采样到 20*20
  - [-1, 1, Conv, [1280, 1, 1]]                 # 调整通道数为 640
  - [[-1, 4], 1, Concat, [1]]                  # 拼接 P5
  - [-1, 2, C3k2, [1024, True]]                # 16

  - [[12, 16, 20], 1, Detect, [nc]]            # Detect(P3, P4, P5)
